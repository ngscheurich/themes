local palette = {
  base00 = "{{ .palette.base00 }}",
  base01 = "{{ .palette.base01 }}",
  base02 = "{{ .palette.base02 }}",
  base03 = "{{ .palette.base03 }}",
  base04 = "{{ .palette.base04 }}",
  base05 = "{{ .palette.base05 }}",
  base06 = "{{ .palette.base06 }}",
  base07 = "{{ .palette.base07 }}",
  base08 = "{{ .palette.base08 }}",
  base09 = "{{ .palette.base09 }}",
  base0A = "{{ .palette.base0A }}",
  base0B = "{{ .palette.base0B }}",
  base0C = "{{ .palette.base0C }}",
  base0D = "{{ .palette.base0D }}",
  base0E = "{{ .palette.base0E }}",
  base0F = "{{ .palette.base0F }}",
}

return {
  apply = function(setup)
    local colors = require("lib.colors")

    setup({ palette = palette })

    local alt_bgs = colors.new(palette.base00):shades(4)
    vim.print({ alts = alt_bgs })
    -- local selection = require("ngs.util").shade("{{ .palette.blue }}", -0.7)

    local groups = {
      SignColumn = { bg = "NONE" },
      LineNr = { fg = palette.base03, bg = "NONE" },
      CursorLine = { bg = colors.new(palette.base00):lighten_to(0.15):to_rgb() },
      -- SnacksPicker = { bg = alt_bg },
      -- SnacksPickerBorder = { fg = palette.bg3, bg = alt_bg },
      -- SnacksPickerDir = { fg = palette.comment },
    }

    for name, opts in pairs(groups) do
      local fg = opts.fg or "NONE"
      local bg = opts.bg or "NONE"
      local style = opts.style or "NONE"
      local highlight = string.format("%s guifg=%s guibg=%s gui=%s", name, fg, bg, style)
      vim.cmd.highlight(highlight)
    end
  end,
}

-- vim:ft=lua
